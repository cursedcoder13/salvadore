const { Markup } = require("telegraf");
const WizardScene = require("telegraf/scenes/wizard");

module.exports = new WizardScene(
  "setSmartsupp",
  async (ctx) => {
    try {
      const msg = await ctx
        .editMessageText(
          `<b>‚öôÔ∏è –í–≤–µ–¥–∏—Ç–µ API-–ö–ª—é—á –æ—Ç smartsupp, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å.
‚ùï –ü—Ä–∏–º–µ—Ä:</b> <code>d0b5e22bb2d23466bf41ffe5641018a9294dc98c</code>`,
          {
            parse_mode: "HTML",
            reply_markup: Markup.inlineKeyboard([
              [Markup.callbackButton("< –û—Ç–º–µ–Ω–∞", "cancel")],
            ]),
          }
        )
        .catch((err) => err);
      ctx.wizard.state.msgId = msg.message_id;
      return ctx.wizard.next();
    } catch (err) {
      console.log(err);
      try {
        await ctx.answerCbQuery(
          "ü§ñ –í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!",
          true
        );
      } catch (err) {
        await ctx.replyWithHTML(
          "ü§ñ –í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!"
        );
      }
      return ctx.scene.leave();
    }
  },
  async (ctx) => {
    try {
      await ctx.deleteMessage().catch((err) => err);
      await ctx.deleteMessage(ctx.wizard.state.msgId).catch((err) => err);

      await ctx.state.user.update({
        supportType: ctx.message.text,
      });

      await ctx
        .replyWithHTML(
          `<b>‚öôÔ∏è –í–∞–º –±—ã–ª –ø—Ä–∏—Å–≤–æ–µ–Ω–æ –¢–ü:</b> <code>Smartsupp</code>
‚ùï <b>–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –∫–ª—é—á:</b> <code>${ctx.message.text}</code>`,
          {
            parse_mode: "HTML",
            reply_markup: Markup.inlineKeyboard([
              [Markup.callbackButton("< –ù–∞–∑–∞–¥", "typeSupport")],
            ]),
          }
        )
        .catch((err) => err);

      return ctx.scene.leave();
    } catch (err) {
      console.log(err);
      try {
        await ctx.answerCbQuery(
          "ü§ñ –í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!",
          true
        );
      } catch (err) {
        await ctx.replyWithHTML(
          "ü§ñ –í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!"
        );
      }
      return ctx.scene.leave();
    }
  }
);