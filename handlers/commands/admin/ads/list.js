const { Markup } = require("telegraf");
const chunk = require("chunk");

const { items } = require("../../../../database/index");

module.exports = async (ctx, page = 1) => {
  try {
    const Items = await items.findAll({
      order: [["createdAt", "DESC"]],
      limit: 20,
    });

    const count = await items.count();

    var buttons = chunk(
      Items.map((v, i) =>
        Markup.callbackButton(
          `üì¶ ${i + 1}. ${v.title} | #${v.id}`,
          `admin_item_${v.id}`
        )
      )
    );

    if (count == 0)
      return ctx
        .answerCbQuery("ü§ñ –ù–∞ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –Ω–∏—á–µ–≥–æ –Ω–µ—Ç", true)
        .catch((err) => err);

    return ctx
      .editMessageText(
        `<b>üóÇÔ∏è –¢–µ–∫—É—â–∏–π —Ä–∞–∑–¥–µ–ª:</b>
‚ï∞ üìÑ –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ -> –û–±—ä—è–≤–ª–µ–Ω–∏—è -> –°–ø–∏—Å–æ–∫ –æ–±—ä—è–≤–ª–µ–Ω–∏–π

‚ï≠ ‚ñ´Ô∏è <b>Username:</b> <code>${ctx.from.first_name}</code>
‚îú ‚ñ´Ô∏è <b>User ID:</b> <code>${ctx.from.id}</code>
‚ï∞ ‚ñ´Ô∏è <b>Tag:</b> <code>#${ctx.state.user.tag}</code>

‚îú üì¶ <b>–ê–∫—Ç–∏–≤–Ω—ã—Ö —Ñ–∏—à–∏–Ω–≥–æ–≤:</b> ${count}

‚ÑπÔ∏è <b>–¢—É—Ç –ø—Ä–∏–≤–µ–¥–µ–Ω—ã –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 –æ–±—ä—è–≤–ª–µ–Ω–∏–π, –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ –±—ã –ø–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º—É, –ø—Ä–æ–ø–∏—à–∏ /item ID –æ–±—ä—è–≤–ª–µ–Ω–∏—è</b>`,
        {
          parse_mode: "HTML",
          disable_web_page_preview: true,
          reply_markup: Markup.inlineKeyboard([
            ...buttons,
            [Markup.callbackButton("< –ù–∞–∑–∞–¥", "admin_items")],
          ]),
        }
      )
      .catch((err) => err);
  } catch (err) {
    console.log(err);
  }
};