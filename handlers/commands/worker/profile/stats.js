const { Markup } = require("telegraf");

const { Profits, items } = require("../../../../database/index");

const axios = require("axios")

async function converter(amount, currency) {
    try {
      var balance = "";
      
      await axios
        .get("https://www.cbr-xml-daily.ru/daily_json.js")
        .then(async function (res) {
          balance = (amount / res.data.Valute.EUR.Value).toFixed(2);
        });
  
      return balance;
    } catch (err) {
      console.log(err);
      return "–Ω–µ —É–¥–∞–ª–∏—Ç—å —Å–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –±–∞–ª–∞–Ω—Å";
    }
  }

module.exports = async (ctx) => {
  try {
    const itemCount = await items.count({
      where: {
        workerId: ctx.from.id
      }
    })

    const { count, rows } = await Profits.findAndCountAll({
      where: {
        workerId: ctx.from.id,
      },
    });

    var profitsSum = parseInt(
      await Profits.sum("rubAmount", {
        where: { workerId: ctx.from.id },
      })
    );

    if(isNaN(profitsSum)) profitsSum = 0

    return ctx
      .editMessageText(
        `üóÇÔ∏è <b>–¢–µ–∫—É—â–∏–π —Ä–∞–∑–¥–µ–ª:</b>
‚ï∞ üìä –ü—Ä–æ—Ñ–∏–ª—å -> –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞

‚ï≠ ‚ñ´Ô∏è <b>Username:</b> <code>${ctx.from.first_name}</code>
‚îú ‚ñ´Ô∏è <b>User ID:</b> <code>${ctx.from.id}</code>
‚ï∞ ‚ñ´Ô∏è <b>Tag:</b> <code>#${ctx.state.user.tag}</code>

‚îú <b>–ê–∫—Ç–∏–≤–Ω—ã—Ö —Ñ–∏—à–∏–Ω–≥–æ–≤:</b> ${itemCount}

‚ï≠ <b>–ö–æ–ª-–≤–æ –ø—Ä–æ—Ñ–∏—Ç–æ–≤:</b> ${count}
‚îú <b>–°—É–º–º–∞ –ø—Ä–æ—Ñ–∏—Ç–æ–≤ –≤ —Ä—É–±–ª—è—Ö:</b> ${parseInt(profitsSum).toFixed(2)} ‚ÇΩ
‚ï∞ <b>–°—É–º–º–∞ –ø—Ä–æ—Ñ–∏—Ç–æ–≤ –≤ –µ–≤—Ä–æ:</b> ${await converter(profitsSum, "EUR")} ‚Ç¨`,
        {
          parse_mode: "HTML",
          reply_markup: Markup.inlineKeyboard([
            [Markup.callbackButton("üî• –¢–û–ü-10", "top")],
            // [Markup.callbackButton("üìä –ì—Ä–∞—Ñ–∏–∫ –ø—Ä–æ—Ñ–∏—Ç–æ–≤", "chartProfit")],
            [Markup.callbackButton("< –ù–∞–∑–∞–¥", "profile")],
          ]),
        }
      )
      .catch((err) => err);
  } catch (err) {
    console.log(err);
  }
};